{"version":3,"sources":["components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","types/types.js","actions/ui.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/AppRouter.js","reducer/calendarReducer.js","reducer/uiReducer.js","reducer/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["LoginScreen","className","type","placeholder","value","Navbar","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","user","name","types","uiOpenModal","eventClearActiveEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minutes","seconds","add","endDate","clone","initEvent","notes","start","toDate","end","CalendarModal","modalOpen","useSelector","state","ui","activeEvent","calendar","dispatch","useDispatch","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValue","setFormValue","useEffect","handleInputChange","target","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","payload","eventAddNew","id","Date","getTime","_id","onChange","minDate","autoComplete","rows","AddNewFab","onClick","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","localStorage","getItem","lastView","setLastView","events","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","startAccessor","endAccessor","eventPropGetter","backgroundColor","borderRadius","opacity","display","color","components","view","AppRouter","exact","path","component","to","initialState","bgcolor","rootReducer","combineReducers","action","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6122adf3.chunk.js","sourcesContent":["import React from 'react';\nimport './login.css';\n\nexport const LoginScreen = () => {\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"ContraseÃ±a\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"ContraseÃ±a\" \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseÃ±a\" \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Navbar = () => {\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\"> \n                Messi\n            </span>\n\n            <button className=\"btn btn-outline-danger\">\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el dÃ­a',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'DÃ­a',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver mÃ¡s (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user} = event;\n\n    return (\n        <div>\n            <strong> {title} </strong>\n            <strong> - {user.name} </strong>\n        </div>\n    )\n}\n","\nexport const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add New',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdate: '[event] Event update',\n    eventDeleted: '[event] Event Deleted'\n}","import { types } from \"../types/types\";\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\n","import { types } from \"../types/types\";\n\nexport const eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventUpdate = (event) => ({\n    type: types.eventUpdate,\n    payload: event,\n});\n\nexport const eventDeleted = () => ({\n    type: types.eventDeleted\n});","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventAddNew, eventClearActiveEvent, eventUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst endDate = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: endDate.toDate()\n}\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector(state => state.ui)\n    const { activeEvent } = useSelector(state => state.calendar)\n\n    const dispatch = useDispatch();\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(endDate.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    const [formValue, setFormValue] = useState(initEvent);\n\n    const { notes, title, start, end } = formValue;\n\n\n    useEffect(() => {\n        \n        if(activeEvent){\n            setFormValue(activeEvent)\n        }else{\n            setFormValue(initEvent)\n        }\n\n    }, [activeEvent, setFormValue])\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValue({\n            ...formValue,\n            [target.name]: target.value\n        })\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal())\n        dispatch(eventClearActiveEvent())\n        setFormValue(initEvent)\n    }\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValue({\n            ...formValue,\n            start: e\n        })\n    }\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValue({\n            ...formValue,\n            end: e\n        })\n    }\n\n    const hanldeSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire('Error', 'La fecha debe de ser mayor a la fecha de Inicio', 'error');\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false)\n        }\n\n        if(activeEvent){\n            dispatch(eventUpdate(formValue))\n        } else {\n            dispatch(eventAddNew({\n                ...formValue,\n                id: new Date().getTime(),\n                user: {\n                    _id: '1234',\n                    name: 'David'\n                }\n            }));\n        }\n\n        setTitleValid(true);\n        closeModal();\n\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\n            <hr />\n            <form className=\"container\" onSubmit={hanldeSubmitForm}>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        minDate={dateStart}\n                        value={dateEnd}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"TÃ­tulo del evento\"\n                        name=\"title\"\n                        value={title}\n                        onChange={handleInputChange}\n                        autoComplete=\"off\"\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripciÃ³n corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">InformaciÃ³n adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch(uiOpenModal())\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleClickNew}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventDeleted())\n    }\n\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n             <i className=\"fas fa-trash\"></i>\n             <span> Delete</span>\n        </button>\n    )\n}\n","import React, { useState } from 'react'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nimport { Navbar } from '../ui/Navbar'\nimport { messages } from '../../helpers/calendar-messages-es'\nimport { CalendarEvent } from './CalendarEvent'\nimport { CalendarModal } from './CalendarModal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\nimport { eventClearActiveEvent, eventSetActive } from '../../actions/events'\nimport { AddNewFab } from '../ui/AddNewFab'\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\n\nexport const CalendarScreen = () => {\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month');\n    const dispatch = useDispatch();\n\n    const {events, activeEvent} = useSelector(state => state.calendar)\n\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal()); \n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e))\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e)\n        localStorage.setItem('lastView', e)\n    }\n\n    const eventStyleGetter = ( ) => {\n        const style = {\n            backgroundColor: '#367CF7',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n        return{\n            style\n        }\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent())\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages= {messages}\n                eventPropGetter={eventStyleGetter}\n                components={{\n                    event: CalendarEvent\n                }}\n                view={lastView}\n            />\n\n            <AddNewFab/>\n\n            {\n                (activeEvent) && <DeleteEventFab/>\n            }\n            \n            <CalendarModal/>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\n\nexport const AppRouter = () => {\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <Route exact path=\"/login\" component={LoginScreen} />\n                    <Route exact path=\"/\" component={CalendarScreen} />\n\n                    <Redirect to=\"/\"/>\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import moment from 'moment'\nimport { types } from '../types/types';\n\nconst initialState = {\n    events: [{\n        id: new Date().getTime(),\n        title: 'Cumple aÃ±os de ella',\n        start: moment().toDate(),\n        end: moment().add(2, 'hours').toDate(),\n        bgcolor: '#fafafa',\n        notes: 'Comprar la fafa',\n        user: {\n            id: 1234,\n            name: 'Messi'\n        }\n    }],\n    activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n            }\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n            case types.uiCloseModal:\n                return {\n                    ...state,\n                    modalOpen: false\n                }\n               \n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer\n    //faltan mas\n})","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducer/rootReducer\";\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n","import React from 'react'\nimport {Provider} from 'react-redux'\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store = {store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './style.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}